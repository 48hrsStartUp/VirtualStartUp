/*
 * investor
 * This swagger documentation provides investor onboarding api details.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.investor.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** DocumentResponse */
@JsonPropertyOrder({
  DocumentResponse.JSON_PROPERTY_DOCUMENT_ID,
  DocumentResponse.JSON_PROPERTY_DOCUMENT_TYPE,
  DocumentResponse.JSON_PROPERTY_DOCUMENT_PATH
})
@JsonTypeName("DocumentResponse")
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2020-10-03T17:43:44.473+05:30[Asia/Kolkata]")
public class DocumentResponse {
  public static final String JSON_PROPERTY_DOCUMENT_ID = "documentId";
  private String documentId;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE = "documentType";
  private String documentType;

  public static final String JSON_PROPERTY_DOCUMENT_PATH = "documentPath";
  private String documentPath;

  public DocumentResponse documentId(String documentId) {

    this.documentId = documentId;
    return this;
  }

  /**
   * Get documentId
   *
   * @return documentId
   */
  @javax.annotation.Nullable
  @ApiModelProperty(example = "198678979087654", value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public DocumentResponse documentType(String documentType) {

    this.documentType = documentType;
    return this;
  }

  /**
   * Get documentType
   *
   * @return documentType
   */
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Aadhar Card", value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }

  public DocumentResponse documentPath(String documentPath) {

    this.documentPath = documentPath;
    return this;
  }

  /**
   * Get documentPath
   *
   * @return documentPath
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDocumentPath() {
    return documentPath;
  }

  public void setDocumentPath(String documentPath) {
    this.documentPath = documentPath;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentResponse documentResponse = (DocumentResponse) o;
    return Objects.equals(this.documentId, documentResponse.documentId)
        && Objects.equals(this.documentType, documentResponse.documentType)
        && Objects.equals(this.documentPath, documentResponse.documentPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, documentType, documentPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentResponse {\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    documentPath: ").append(toIndentedString(documentPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
